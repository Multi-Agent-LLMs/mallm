from . import metric
from nltk.translate.meteor_score import meteor_score
from nltk import word_tokenize, download

download("wordnet")


class METEOR(metric.Metric):
    """
    A class to evaluate the METEOR score for text generation tasks.
    """

    def evaluate(self, generated_text: str, reference_texts: list[str]) -> dict:
        """
        Evaluate the generated text against a reference text using METEOR score.

        Args:
        generated_text (str): The text generated by the model.
        reference_texts (list[str]): The list of reference texts to compare against.

        Returns:
        dict: The METEOR score.
        """
        # Tokenize the input texts
        generated_tokens = word_tokenize(generated_text)
        reference_tokens = word_tokenize(reference_texts[0])
        # Calculate METEOR score
        score = meteor_score([generated_tokens], reference_tokens)
        return {"meteor": score}

    def get_metric_name(self) -> str:
        """
        Return the name of the evaluation metric.

        Returns:
        str: The name of the metric, "METEOR".
        """
        return "METEOR"
